name: CI

on:
  push:
    branches: [ master, 'feature/*' ]
  pull_request:
    branches: [ master ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Type check
      run: npm run build:shared && cd frontend && npm run type-check

    - name: Lint
      run: cd frontend && npm run lint

    - name: Test
      run: cd frontend && npm run test

  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: cd backend && npm run lint
    
    - name: Test
      run: cd backend && npm run test
      env:
        DATABASE_URL: postgresql://postgres:testpassword@localhost:5432/test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret
